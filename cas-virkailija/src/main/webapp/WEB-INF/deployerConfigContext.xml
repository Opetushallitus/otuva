<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.ldaptive.org/schema/spring-ext http://www.ldaptive.org/schema/spring-ext.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <!-- oph start -->
    <util:map id="authenticationHandlersResolvers">
        <entry key-ref="proxyAuthenticationHandler" value-ref="proxyPrincipalResolver"/>
        <entry key-ref="httpAuthenticationHandler" value="#{null}" />
        <entry key-ref="samlAuthenticationHandler" value="#{null}" />
    </util:map>

    <bean id="httpAuthenticationHandler" class="fi.vm.sade.auth.cas.HttpAuthenticationHandler">
        <constructor-arg index="0" ref="ophHttpClient" />
    </bean>

    <bean id="ophHttpClient" class="fi.vm.sade.auth.clients.HttpClientFactoryBean">
        <constructor-arg index="0" ref="ophProperties" />
    </bean>

    <bean id="samlAuthenticationHandler" class="fi.vm.sade.saml.action.SAMLAuthenticationHandler">
        <constructor-arg index="0" ref="ophProperties"/>
    </bean>

    <bean id="ophProperties" class="fi.vm.sade.CasOphProperties" />
    <!-- oph end -->

    <util:list id="authenticationMetadataPopulators">
        <ref bean="successfulHandlerMetaDataPopulator"/>
        <ref bean="rememberMeAuthenticationMetaDataPopulator"/>

        <!--
        <bean class="org.jasig.cas.extension.clearpass.CacheCredentialsMetaDataPopulator"
              c:credentialCache-ref="encryptedMap" />
         -->
    </util:list>

    <bean id="attributeRepository" class="org.jasig.services.persondir.support.NamedStubPersonAttributeDao"
          p:backingMap-ref="attrRepoBackingMap"/>

    <util:map id="attrRepoBackingMap">
        <entry key="uid" value="uid"/>
        <entry key="eduPersonAffiliation" value="eduPersonAffiliation"/>
        <entry key="groupMembership" value="groupMembership"/>
        <entry>
            <key>
                <value>memberOf</value>
            </key>
            <list>
                <value>faculty</value>
                <value>staff</value>
                <value>org</value>
            </list>
        </entry>
    </util:map>

    <alias name="serviceThemeResolver" alias="themeResolver"/>

    <!-- oph start -->
    <bean id="serviceRegistryDao"
          class="org.jasig.cas.services.InMemoryServiceRegistryDaoImpl"
          p:registeredServices-ref="registeredServicesList" />

    <util:list id="registeredServicesList">
        <bean class="org.jasig.cas.services.RegexRegisteredService"
              p:id="1"
              p:name="Login whitelist"
              p:description="Allows CAS login on domains in whitelist"
              p:serviceId="${cas.whitelist.regexp}"
              p:evaluationOrder="0"
              p:proxyPolicy-ref="registeredServiceProxyPolicy" />
    </util:list>

    <bean id="registeredServiceProxyPolicy" class="org.jasig.cas.services.RegexMatchingRegisteredServiceProxyPolicy"
        c:pgtUrlPattern="^https?://.*"
    />
    <!-- oph end -->

    <alias name="defaultTicketRegistry" alias="ticketRegistry"/>

    <alias name="ticketGrantingTicketExpirationPolicy" alias="grantingTicketExpirationPolicy"/>
    <alias name="multiTimeUseOrTimeoutExpirationPolicy" alias="serviceTicketExpirationPolicy"/>

    <alias name="anyAuthenticationPolicy" alias="authenticationPolicy"/>
    <alias name="acceptAnyAuthenticationPolicyFactory" alias="authenticationPolicyFactory"/>

    <bean id="auditTrailManager"
          class="org.jasig.inspektr.audit.support.Slf4jLoggingAuditTrailManager"
          p:entrySeparator="${cas.audit.singleline.separator:|}"
          p:useSingleLine="${cas.audit.singleline:false}"/>

    <!-- oph start -->
    <alias name="loginFailureInterceptor" alias="authenticationThrottle"/>
    <!-- oph end -->

    <util:list id="monitorsList">
        <ref bean="memoryMonitor"/>
        <ref bean="sessionMonitor"/>
    </util:list>

    <alias name="defaultPrincipalFactory" alias="principalFactory"/>
    <alias name="defaultAuthenticationTransactionManager" alias="authenticationTransactionManager"/>
    <alias name="defaultPrincipalElectionStrategy" alias="principalElectionStrategy"/>
    <alias name="tgcCipherExecutor" alias="defaultCookieCipherExecutor"/>

    <!-- oph start -->
    <bean id="samlAction" class="fi.vm.sade.saml.action.SAMLAction" />

    <bean id="configuration" class="fi.vm.sade.Configuration">
        <property name="hakaUrl" value="${haka.url}" />
        <property name="suomifiUrl" value="https://${host.shibboleth}/shibbolethVirkailija/virkailija" />
        <property name="suomifiUrlTarget" value="https://${host.shibboleth}/kayttooikeus-service/cas/tunnistus?kielisyys=" />
        <property name="loginTietosuojaselosteUrl" value="${login.tietosuojaseloste.url}" />
    </bean>

    <bean id="strongIdentificationRequiringCentralAuthenticationService"
          class="org.jasig.cas.StrongIdentificationRequiringCentralAuthenticationServiceImpl"
          p:principalFactory-ref="principalFactory"
          p:kayttooikeusClient-ref="kayttooikeusRestClient"
          p:ophProperties-ref="ophProperties"
          p:requireStrongIdentification="${cas.require-strong-identification}"
          p:casRequireStrongIdentificationListAsString="${cas.require-strong-identification.usernamelist}">
        <constructor-arg index="0" ref="defaultTicketRegistry" />
        <constructor-arg index="1" ref="defaultTicketFactory" />
        <constructor-arg index="2" ref="servicesManager" />
        <constructor-arg index="3" ref="logoutManager" />
    </bean>

    <bean id="oppijanumerorekisteriRestClient" class="fi.vm.sade.auth.clients.OppijanumerorekisteriRestClient">
        <constructor-arg ref="ophProperties" />
        <property name="clientSubSystemCode" value="authentication.cas" />
        <property name="username" value="${serviceprovider.app.username.to.usermanagement}" />
        <property name="password" value="${serviceprovider.app.password.to.usermanagement}" />
    </bean>

    <bean id="kayttooikeusRestClient" class="fi.vm.sade.auth.clients.KayttooikeusRestClient">
        <constructor-arg ref="ophProperties" />
        <property name="clientSubSystemCode" value="authentication.cas" />
        <property name="username" value="${serviceprovider.app.username.to.usermanagement}" />
        <property name="password" value="${serviceprovider.app.password.to.usermanagement}" />
    </bean>

    <!-- override cas exception handler to add strong identification support -->
    <bean id="authenticationExceptionHandler" class="fi.vm.sade.auth.exception.OphAuthenticationExceptionHandler" primary="true" />

    <!-- override cas bean to add strong identification support -->
    <bean id="authenticationViaFormAction" class="org.jasig.cas.web.flow.AuthenticationViaFormAction"
          p:centralAuthenticationService-ref="strongIdentificationRequiringCentralAuthenticationService"
          p:warnCookieGenerator-ref="warnCookieGenerator"/>

    <bean id="strongIdentificationRedirectAction" class="fi.vm.sade.auth.action.StrongIdentificationRedirectAction"
          p:kayttooikeusClient-ref="kayttooikeusRestClient"
          p:oppijanumerorekisteriClient-ref="oppijanumerorekisteriRestClient"
          p:ophProperties-ref="ophProperties" />

    <bean id="casProxyCallbackConfiguration" class="fi.vm.sade.auth.cas.CasProxyCallbackConfiguration" init-method="initialize">
        <constructor-arg index="0" value="${cas.proxy.callback.ignore-errors}" />
        <constructor-arg index="1" ref="supportsTrustStoreSslSocketFactoryHttpClient" />
        <constructor-arg index="2" ref="proxyAuthenticationHandler" />
        <constructor-arg index="3" ref="proxy20Handler" />
    </bean>
    <!-- oph end -->
</beans>
